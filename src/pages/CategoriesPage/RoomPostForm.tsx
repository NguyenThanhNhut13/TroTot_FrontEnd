import React, { useContext, useState } from "react";
import { AppContext } from "../../contexts/app.context";
import { Form, Button, Row, Col, Tabs, Tab } from "react-bootstrap";
import { useNavigate } from "react-router-dom";

const RoomPostForm = () => {
  const { profile } = useContext(AppContext);
  const [currentTab, setCurrentTab] = useState("general");
  const navigate = useNavigate();

  // State cho c√°c dropdown v√† ƒë·ªãa ch·ªâ chi ti·∫øt
  const [province, setProvince] = useState("");
  const [district, setDistrict] = useState("");
  const [ward, setWard] = useState("");
  const [street, setStreet] = useState("");
  const [detailedAddress, setDetailedAddress] = useState("");

  // State cho th√¥ng tin li√™n h·ªá
  const [contactName, setContactName] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  const [email, setEmail] = useState("");

  // D·ªØ li·ªáu m·∫´u cho dropdown (c√≥ th·ªÉ thay b·∫±ng API)
  const provinces = ["Ch·ªçn T·ªânh/TP...", "H√† N·ªôi", "TP. H·ªì Ch√≠ Minh", "ƒê√† N·∫µng"];
  const districts = ["Qu·∫≠n/Huy·ªán...", "Qu·∫≠n 1", "Qu·∫≠n 7", "Qu·∫≠n Ba ƒê√¨nh"];
  const wards = [
    "Ph∆∞·ªùng/X√£...",
    "Ph∆∞·ªùng B·∫øn Ngh√©",
    "Ph∆∞·ªùng T√¢n Ph√∫",
    "Ph∆∞·ªùng C·ªëng V·ªã",
  ];
  const streets = [
    "ƒê∆∞·ªùng ph·ªë...",
    "ƒê∆∞·ªùng L√™ L·ª£i",
    "ƒê∆∞·ªùng Nguy·ªÖn Hu·ªá",
    "ƒê∆∞·ªùng ƒêi·ªán Bi√™n Ph·ªß",
  ];

  // X·ª≠ l√Ω k√©o th·∫£ ho·∫∑c ch·ªçn file (ch·ªâ ƒë·ªÉ minh h·ªça, c·∫ßn th√™m logic th·ª±c t·∫ø)
  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (files) {
      // X·ª≠ l√Ω file ·ªü ƒë√¢y (v√≠ d·ª•: upload l√™n server)
      console.log("Files selected:", files);
    }
  };

  return (
    <div className="main-content d-flex">
      {/* Sidebar */}
      <div
        className="sidebar p-3"
        style={{
          width: "330px",
          backgroundColor: "#fff",
          borderRight: "1px solid #eee",
          borderRadius: "10px",
        }}
      >
        <div className="text-center mb-3">
          <img
            src="../../assets/images/anhmau.jpg"
            alt="Avatar"
            style={{ width: 60, height: 60, borderRadius: "50%" }}
          />
          <h5 className="mt-2 mb-1">{profile?.fullName || "Ng√¥ VƒÉn To√†n"}</h5>
          <p className="text-muted" style={{ fontSize: 14 }}>
            ID: #{profile?.id || "29721"}
          </p>
        </div>

        <div className="mb-3 px-2">
          <div className="d-flex justify-content-between">
            <span>TK ch√≠nh:</span>
            <span className="text-danger fw-bold">0 ƒë</span>
          </div>
          <div className="d-flex justify-content-between">
            <span>TK khuy·∫øn m√£i:</span>
            <span className="text-danger fw-bold">0 ƒë</span>
          </div>
          <div className="d-flex justify-content-between">
            <span>S·ªë l∆∞·ª£ng tin:</span>
            <span className="text-danger fw-bold">0/1 Tin</span>
          </div>
        </div>

        <div className="d-flex gap-2 mb-3 px-2">
          <Button variant="outline-primary" className="flex-fill">
            Mua s·ªë l∆∞·ª£ng tin ƒëƒÉng
          </Button>
          <Button variant="primary" className="flex-fill">
            N·∫°p ti·ªÅn
          </Button>
        </div>

        <div className="sidebar-menu">
          {[
            { icon: "üìä", label: "Th√¥ng tin chung", path: "/profile" },
            { icon: "üìã", label: "Qu·∫£n l√Ω tin", path: "/manage-posts" },
            { icon: "üí¨", label: "Qu·∫£n l√Ω ƒë√°nh gi√°", path: "/manage-reviews" },
            { icon: "‚è≥", label: "L·ªãch s·ª≠", path: "/history" },
            { icon: "üíµ", label: "B·∫£ng ph√≠ ƒëƒÉng tin", path: "/pricing" },
          ].map((item, index) => (
            <div
              key={index}
              className="d-flex justify-content-between align-items-center py-2 px-3 mb-1"
              style={{
                borderRadius: 8,
                backgroundColor: "#f8f9fa",
                cursor: "pointer",
              }}
              onClick={() => navigate(item.path)}
            >
              <span>
                <span style={{ marginRight: 8 }}>{item.icon}</span>
                {item.label}
              </span>
            </div>
          ))}
        </div>
      </div>
      {/* Main Content */}
      <div className="content p-4 flex-grow-1">
        <Tabs
          activeKey={currentTab}
          onSelect={(k) => setCurrentTab(k || "")}
          className="mb-4"
        >
          <Tab eventKey="general" title="Th√¥ng tin chung"></Tab>
        </Tabs>

        <h4 className="mb-3" style={{ color: "blue" }}>
          TH√îNG TIN CHUNG
        </h4>
        <h5>T√™n nh√† tr·ªç, ph√≤ng tr·ªç</h5>
        <Form.Group className="mb-3">
          <Form.Control type="text" placeholder="Nh·∫≠p t√™n nh√† tr·ªç" />
        </Form.Group>

        <Form>
          <Row className="mb-3">
            <Col md={6}>
              <Form.Group>
                <h5>Tr·ªç t·ª± qu·∫£n</h5>
                <Form.Select>
                  <option>L·ª±a ch·ªçn</option>
                  <option value="1">C√≥</option>
                  <option value="0">Kh√¥ng</option>
                </Form.Select>
              </Form.Group>
            </Col>
            <Col md={6}>
              <Form.Group>
                <h5>Di·ªán t√≠ch</h5>
                <div className="d-flex align-items-center">
                  <Form.Control type="text" placeholder="Di·ªán t√≠ch" />
                  <Button variant="outline-primary" className="ms-2">
                    m¬≤
                  </Button>
                </div>
              </Form.Group>
            </Col>
          </Row>

          <Row className="mb-3">
            <Col md={6}>
              <Form.Group>
                <h5>Gi√° cho thu√™</h5>
                <Form.Control type="text" placeholder="Gi√° cho thu√™" />
                <div className="mt-2 d-flex gap-2 flex-wrap">
                  {[100000, 1000000, 10000000, 100000000].map((price) => (
                    <Button key={price} variant="outline-primary">
                      {price.toLocaleString()}
                    </Button>
                  ))}
                </div>
                <div className="mt-2">
                  <span>T·ªïng tr·ªã gi√°: </span>
                  <span className="fw-bold">0 ƒë</span>
                </div>
              </Form.Group>
            </Col>
            <Col md={6}>
              <Form.Group>
                <h5>T·ªïng s·ªë ph√≤ng</h5>
                <Form.Control type="text" placeholder="T·ªïng s·ªë ph√≤ng" />
              </Form.Group>
            </Col>
          </Row>

          <Form.Group className="mb-3">
            <h5>N·ªôi dung m√¥ t·∫£</h5>
            <Form.Control as="textarea" rows={3} placeholder="N·ªôi dung m√¥ t·∫£" />
          </Form.Group>

          <div className="mb-3">
            <h5 className="mb-3" style={{ color: "blue" }}>
              ƒê·ªêI T∆Ø·ª¢NG NH√Ä TR·ªå
            </h5>
            <div className="d-flex gap-2 flex-wrap">
              <Form.Check inline label="ƒêi h·ªçc" type="checkbox" />
              <Form.Check inline label="ƒêi l√†m" type="checkbox" />
              <Form.Check inline label="Gia ƒë√¨nh" type="checkbox" />
              <Form.Check inline label="C·∫∑p ƒë√¥i" type="checkbox" />
            </div>
          </div>

          <div className="mb-3">
            <h5 className="mb-3" style={{ color: "blue" }}>
              TI·ªÜN NGHI NH√Ä TR·ªå
            </h5>
            <Row>
              <Col md={3}>
                <Form.Check label="Wifi" type="checkbox" />
                <Form.Check label="B√¨nh n√≥ng l·∫°nh" type="checkbox" />
                <Form.Check label="B√£i ƒë·ªÉ xe ri√™ng" type="checkbox" />
              </Col>
              <Col md={3}>
                <Form.Check label="K·ªá b·∫øp" type="checkbox" />
                <Form.Check label="V·ªá sinh trong" type="checkbox" />
                <Form.Check label="Camera an ninh" type="checkbox" />
              </Col>
              <Col md={3}>
                <Form.Check label="M√°y gi·∫∑t" type="checkbox" />
                <Form.Check label="Ph√≤ng t·∫Øm" type="checkbox" />
              </Col>
              <Col md={3}>
                <Form.Check label="Thang m√°y" type="checkbox" />
                <Form.Check label="T·ªß qu·∫ßn √°o" type="checkbox" />
              </Col>
            </Row>
          </div>

          <div className="mb-3">
            <h5 className="mb-3" style={{ color: "blue" }}>
              M√îI TR∆Ø·ªúNG XUNG QUANH
            </h5>
            <Row>
              <Col md={3}>
                <Form.Check label="Ch·ª£" type="checkbox" />
                <Form.Check label="C√¥ng vi√™n" type="checkbox" />
              </Col>
              <Col md={3}>
                <Form.Check label="Si√™u th·ªã" type="checkbox" />
                <Form.Check label="B·∫øn xe Bus" type="checkbox" />
              </Col>
              <Col md={3}>
                <Form.Check label="B·ªánh vi·ªán" type="checkbox" />
                <Form.Check label="Trung t√¢m th·ªÉ thao" type="checkbox" />
              </Col>
              <Col md={3}>
                <Form.Check label="Tr∆∞·ªùng h·ªçc" type="checkbox" />
              </Col>
            </Row>
          </div>

          <div className="mb-3">
            <h5 className="mb-3" style={{ color: "blue" }}>
              ƒê·ªäA ƒêI·ªÇM
            </h5>
            <Row>
              <Col md={3}>
                <Form.Group>
                  <Form.Label>T·ªânh/TP</Form.Label>
                  <Form.Select
                    value={province}
                    onChange={(e) => setProvince(e.target.value)}
                  >
                    {provinces.map((prov, index) => (
                      <option key={index} value={prov}>
                        {prov}
                      </option>
                    ))}
                  </Form.Select>
                </Form.Group>
              </Col>
              <Col md={3}>
                <Form.Group>
                  <Form.Label>Qu·∫≠n/Huy·ªán</Form.Label>
                  <Form.Select
                    value={district}
                    onChange={(e) => setDistrict(e.target.value)}
                  >
                    {districts.map((dist, index) => (
                      <option key={index} value={dist}>
                        {dist}
                      </option>
                    ))}
                  </Form.Select>
                </Form.Group>
              </Col>
              <Col md={3}>
                <Form.Group>
                  <Form.Label>Ph∆∞·ªùng/X√£</Form.Label>
                  <Form.Select
                    value={ward}
                    onChange={(e) => setWard(e.target.value)}
                  >
                    {wards.map((w, index) => (
                      <option key={index} value={w}>
                        {w}
                      </option>
                    ))}
                  </Form.Select>
                </Form.Group>
              </Col>
              <Col md={3}>
                <Form.Group>
                  <Form.Label>ƒê∆∞·ªùng ph·ªë</Form.Label>
                  <Form.Select
                    value={street}
                    onChange={(e) => setStreet(e.target.value)}
                  >
                    {streets.map((str, index) => (
                      <option key={index} value={str}>
                        {str}
                      </option>
                    ))}
                  </Form.Select>
                </Form.Group>
              </Col>
            </Row>
            <Form.Group className="mt-3">
              <Form.Label>ƒê·ªãa ch·ªâ</Form.Label>
              <Form.Control
                type="text"
                placeholder="ƒê·ªãa ch·ªâ"
                value={detailedAddress}
                onChange={(e) => setDetailedAddress(e.target.value)}
              />
            </Form.Group>
          </div>

          {/* Th√™m ph·∫ßn H√åNH ·∫¢NH T·ªîNG QUAN */}
          <div className="mb-3">
            <h5 className="mb-3" style={{ color: "blue" }}>
              H√åNH ·∫¢NH T·ªîNG QUAN
            </h5>
            <div
              style={{
                border: "2px dashed #007bff",
                padding: "20px",
                textAlign: "center",
                backgroundColor: "#f8f9fa",
                borderRadius: "5px",
              }}
            >
              <div>
                <i
                  className="bi bi-cloud-upload"
                  style={{ fontSize: "24px", color: "#007bff" }}
                ></i>
                <p style={{ color: "#007bff", margin: "10px 0" }}>
                  K√âO TH·∫¢ H√åNH ·∫¢NH (Ho·∫∑c ch·ªçn h√¨nh ·∫£nh)
                </p>
              </div>
              <Form.Control
                type="file"
                multiple
                onChange={handleFileChange}
                style={{ display: "none" }}
                id="file-upload"
              />
              <Form.Label
                htmlFor="file-upload"
                style={{
                  cursor: "pointer",
                  padding: "8px 16px",
                  border: "1px solid #ccc",
                  borderRadius: "5px",
                  backgroundColor: "#fff",
                }}
              >
                H∆∞·ªõng d·∫´n ƒëƒÉng ·∫£nh
              </Form.Label>
            </div>
          </div>

          {/* Th√™m ph·∫ßn TH√îNG TIN LI√äN H·ªÜ */}
          <div className="mb-3">
            <h5 className="mb-3" style={{ color: "blue" }}>
              TH√îNG TIN LI√äN H·ªÜ
            </h5>
            <Row className="mb-3">
              <Col md={6}>
                <Form.Group>
                  <Form.Label>H·ªç t√™n</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="H·ªç t√™n"
                    value={contactName}
                    onChange={(e) => setContactName(e.target.value)}
                  />
                </Form.Group>
              </Col>
              <Col md={6}>
                <Form.Group>
                  <Form.Label>S·ªë ƒëi·ªán tho·∫°i</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="S·ªë ƒëi·ªán tho·∫°i"
                    value={phoneNumber}
                    onChange={(e) => setPhoneNumber(e.target.value)}
                  />
                </Form.Group>
              </Col>
            </Row>
            <Row className="mb-3">
              <Col md={6}>
                <Form.Group>
                  <Form.Label>ƒê·ªãa ch·ªâ</Form.Label>
                  <Form.Control
                    type="text"
                    placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ c·ªßa b·∫°n"
                    value={detailedAddress} // C√≥ th·ªÉ t√°i s·ª≠ d·ª•ng ƒë·ªãa ch·ªâ t·ª´ ph·∫ßn ƒê·ªäA ƒêI·ªÇM
                    onChange={(e) => setDetailedAddress(e.target.value)}
                  />
                </Form.Group>
              </Col>
              <Col md={6}>
                <Form.Group>
                  <Form.Label>Email</Form.Label>
                  <Form.Control
                    type="email"
                    placeholder="Email"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                  />
                </Form.Group>
              </Col>
            </Row>
          </div>

          <div className="d-flex gap-2">
            <Button variant="primary">L∆∞u</Button>
          </div>
        </Form>
      </div>
    </div>
  );
};

export default RoomPostForm;
